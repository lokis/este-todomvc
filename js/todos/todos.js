// Generated by github.com/steida/coffee2closure 0.1.3
goog.provide('app.todos.Todos');
goog.require('app.todos.Todo');

/**
  @constructor
 */
app.todos.Todos = function() {
  this.items = [];
}

/**
  @type {Array.<app.todos.Todo>}
  @expose
 */
app.todos.Todos.prototype.items = null;

/**
  @param {string} title
 */
app.todos.Todos.prototype.add = function(title) {
  var todo;
  todo = new app.todos.Todo(title);
  return this.items.push(todo);
};

/**
  @return {Array.<app.todos.Todo>}
 */
app.todos.Todos.prototype.remaining = function() {
  return this.items.filter(function(item) {
    return !item.completed;
  });
};

/**
  @return {Array.<app.todos.Todo>}
 */
app.todos.Todos.prototype.completed = function() {
  return this.items.filter(function(item) {
    return item.completed;
  });
};

/**
  @param {boolean} completed
 */
app.todos.Todos.prototype.setAllCompleted = function(completed) {
  return this.items.forEach(function(item) {
    return item.completed = completed;
  });
};
app.todos.Todos.prototype.clearCompleted = function() {
  return this.items = this.remaining();
};

/**
  @param {*} json
 */
app.todos.Todos.prototype.deserialize = function(json) {
  this.items.length = 0;
  json.items.forEach((function(_this) {
    return function(item) {
      var todo;
      todo = new app.todos.Todo;
      goog.mixin(todo, item);
      return _this.items.push(todo);
    };
  })(this));
};

/**
  We have to create new object because TodoMVC specification requires that
  editable property should not be serialized.
  @return {app.todos.Todos}
 */
app.todos.Todos.prototype.serialize = function() {
  var todos;
  todos = new app.todos.Todos;
  this.items.forEach((function(_this) {
    return function(item) {
      var todo;
      todo = new app.todos.Todo;
      goog.mixin(todo, item);
      delete todo.editing;
      return todos.items.push(todo);
    };
  })(this));
  return todos;
};